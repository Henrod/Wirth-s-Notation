1,0 1,2 1,1 2,0 2,4 2,1 3,0 3,2 3,1 3,4 3,6 3,8 3,10 3,12 3,13 3,16 3,17 3,18 3,20 3,24 3,25 3,26 3,31 3,34 3,33 3,37 3,40 3,41 3,43 3,44 3,47 3,48 3,49 3,53 3,54 3,57 3,58 3,59 3,60 3,61 3,62 3,1 4,0 4,4 4,5 4,3 4,7 4,1 5,0 5,1 6,0 6,4 6,1 7,0 7,4 7,5 7,8 7,13 7,14 7,1 8,0 8,4 8,1 9,0 9,4 9,1 10,0 10,2 10,3 10,4 10,5 10,1 11,0 11,2 11,3 11,9 11,12 11,13 11,1 12,0 12,1 12,1 
y
&& || > == < ELSE THEN / * - + Termo 9 8 7 6 5 4 3 2 1 0 z y x w v u t s r q p o n m l k j i h g f e d c b a Expressao ] [ Comparacao WHILE CALL = } Valor GIVE { , INT[] ) ( Identificador VOID FUNCTION INT Decisao IF ListaIdentificadores READ ListaExpressao PRINT Atribuicao LET ; Comando END SequenciaDeComandos Programa 
12,1 a 12,1
12,1 b 12,1
12,1 c 12,1
12,1 d 12,1
12,1 e 12,1
12,1 f 12,1
12,1 g 12,1
12,1 h 12,1
12,1 i 12,1
12,1 j 12,1
12,1 k 12,1
12,1 l 12,1
12,1 m 12,1
12,1 n 12,1
12,1 o 12,1
12,1 p 12,1
12,1 q 12,1
12,1 r 12,1
12,1 s 12,1
12,1 t 12,1
12,1 u 12,1
12,1 v 12,1
12,1 w 12,1
12,1 x 12,1
12,1 y 12,1
12,1 z 12,1
12,1 0 12,1
12,1 1 12,1
12,1 2 12,1
12,1 3 12,1
12,1 4 12,1
12,1 5 12,1
12,1 6 12,1
12,1 7 12,1
12,1 8 12,1
12,1 9 12,1
12,1 RETURN
12,1 RETURN
12,0 9 12,1
12,0 8 12,1
12,0 7 12,1
12,0 6 12,1
12,0 5 12,1
12,0 4 12,1
12,0 3 12,1
12,0 2 12,1
12,0 1 12,1
12,0 0 12,1
12,0 z 12,1
12,0 y 12,1
12,0 x 12,1
12,0 w 12,1
12,0 v 12,1
12,0 u 12,1
12,0 t 12,1
12,0 s 12,1
12,0 r 12,1
12,0 q 12,1
12,0 p 12,1
12,0 o 12,1
12,0 n 12,1
12,0 m 12,1
12,0 l 12,1
12,0 k 12,1
12,0 j 12,1
12,0 i 12,1
12,0 h 12,1
12,0 g 12,1
12,0 f 12,1
12,0 e 12,1
12,0 d 12,1
12,0 c 12,1
12,0 b 12,1
12,0 a 12,1
11,1 || 11,9
11,1 && 11,9
11,1 RETURN
11,13 6 STACK 11,1
11,12 > 11,13
11,12 == 11,13
11,12 < 11,13
11,9 6 STACK 11,12
11,3 6 STACK 11,1
11,2 > 11,3
11,2 == 11,3
11,2 < 11,3
11,0 6 STACK 11,2
10,1 RETURN
10,5 2 STACK 10,1
10,4 ELSE 10,5
10,3 2 STACK 10,4
10,2 THEN 10,3
10,0 11 STACK 10,2
9,1 , 9,4
9,1 RETURN
9,4 5 STACK 9,1
9,0 5 STACK 9,1
8,1 , 8,4
8,1 RETURN
8,4 6 STACK 8,1
8,0 6 STACK 8,1
7,1 [ 7,4
7,1 * 7,8
7,1 / 7,8
7,1 [ 7,13
7,1 RETURN
7,14 ] 7,1
7,13 12 STACK 7,14
7,8 12 STACK 7,1
7,5 ] 7,1
7,4 12 STACK 7,5
7,0 12 STACK 7,1
6,1 + 6,4
6,1 - 6,4
6,1 RETURN
6,4 7 STACK 6,1
6,0 7 STACK 6,1
5,1 a 5,1
5,1 b 5,1
5,1 c 5,1
5,1 d 5,1
5,1 e 5,1
5,1 f 5,1
5,1 g 5,1
5,1 h 5,1
5,1 i 5,1
5,1 j 5,1
5,1 k 5,1
5,1 l 5,1
5,1 m 5,1
5,1 n 5,1
5,1 o 5,1
5,1 p 5,1
5,1 q 5,1
5,1 r 5,1
5,1 s 5,1
5,1 t 5,1
5,1 u 5,1
5,1 v 5,1
5,1 w 5,1
5,1 x 5,1
5,1 y 5,1
5,1 z 5,1
5,1 0 5,1
5,1 1 5,1
5,1 2 5,1
5,1 3 5,1
5,1 4 5,1
5,1 5 5,1
5,1 6 5,1
5,1 7 5,1
5,1 8 5,1
5,1 9 5,1
5,1 RETURN
5,0 z 5,1
5,0 y 5,1
5,0 x 5,1
5,0 w 5,1
5,0 v 5,1
5,0 u 5,1
5,0 t 5,1
5,0 s 5,1
5,0 r 5,1
5,0 q 5,1
5,0 p 5,1
5,0 o 5,1
5,0 n 5,1
5,0 m 5,1
5,0 l 5,1
5,0 k 5,1
5,0 j 5,1
5,0 i 5,1
5,0 h 5,1
5,0 g 5,1
5,0 f 5,1
5,0 e 5,1
5,0 d 5,1
5,0 c 5,1
5,0 b 5,1
5,0 a 5,1
4,1 RETURN
4,7 6 STACK 4,1
4,3 [ 4,4
4,3 = 4,7
4,5 ] 4,3
4,4 12 STACK 4,5
4,0 5 STACK 4,3
3,1 = 3,40
3,1 RETURN
3,62 } 3,1
3,61 2 STACK 3,62
3,60 { 3,61
3,59 ) 3,60
3,58 11 STACK 3,59
3,57 ( 3,58
3,54 12 STACK 3,53
3,53 ) 3,1
3,53 , 3,54
3,49 12 STACK 3,53
3,49 ) 3,1
3,48 ( 3,49
3,47 5 STACK 3,48
3,44 12 STACK 3,43
3,43 } 3,1
3,43 , 3,44
3,41 12 STACK 3,43
3,40 { 3,41
3,37 5 STACK 3,1
3,33 GIVE 3,34
3,33 } 3,1
3,34 12 STACK 3,33
3,31 2 STACK 3,33
3,26 5 STACK 3,24
3,25 INT[] 3,26
3,25 INT 3,26
3,24 ) 3,18
3,24 , 3,25
3,20 5 STACK 3,24
3,18 { 3,31
3,17 INT[] 3,20
3,17 INT 3,20
3,17 ) 3,18
3,16 ( 3,17
3,13 5 STACK 3,16
3,12 VOID 3,13
3,12 INT 3,13
3,10 4 STACK 3,1
3,8 10 STACK 3,1
3,6 9 STACK 3,1
3,4 8 STACK 3,1
3,1 RETURN
3,2 4 STACK 3,1
3,0 WHILE 3,57
3,0 CALL 3,47
3,0 INT[] 3,37
3,0 FUNCTION 3,12
3,0 INT 3,10
3,0 IF 3,8
3,0 READ 3,6
3,0 PRINT 3,4
3,0 LET 3,2
2,1 ; 2,4
2,1 RETURN
2,4 3 STACK 2,1
2,0 3 STACK 2,1
1,1 RETURN
1,2 END 1,1
1,0 2 STACK 1,2
